Logic,operationId,tags,description,parameters
,getOrganizationNetworks,"['organizations', 'configure', 'networks']",List the networks that the user has privileges on in an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'string', 'name': 'configTemplateId', 'in': 'query', 'description': 'An optional parameter that is the ID of a config template. Will return all networks bound to that template.'}, {'type': 'integer', 'name': 'perPage', 'in': 'query', 'description': 'The number of entries per page returned. Acceptable range is 3 - 100000. Default is 1000.'}, {'type': 'string', 'name': 'startingAfter', 'in': 'query', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}, {'type': 'string', 'name': 'endingBefore', 'in': 'query', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}]"
,getOrganizationConfigTemplates,"['organizations', 'configure', 'configTemplates']",List the configuration templates for this organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationLicensesOverview,"['organizations', 'monitor', 'licenses', 'overview']",Return an overview of the license state for an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationInventoryDevices,"['organizations', 'configure', 'inventoryDevices']",Return the device inventory for an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'integer', 'name': 'perPage', 'in': 'query', 'description': 'The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.'}, {'type': 'string', 'name': 'startingAfter', 'in': 'query', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}, {'type': 'string', 'name': 'endingBefore', 'in': 'query', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}]"
,getOrganizationDevices,"['organizations', 'configure', 'devices']",List the devices in an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'integer', 'name': 'perPage', 'in': 'query', 'description': 'The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.'}, {'type': 'string', 'name': 'startingAfter', 'in': 'query', 'description': 'A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}, {'type': 'string', 'name': 'endingBefore', 'in': 'query', 'description': 'A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.'}, {'type': 'string', 'name': 'configurationUpdatedAfter', 'in': 'query', 'description': ""Filter results by whether or not the device's configuration has been updated after the given timestamp""}]"
,getOrganizationAdmins,"['organizations', 'configure', 'admins']",List the dashboard administrators in this organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationBrandingPolicies,"['organizations', 'configure', 'brandingPolicies']",List the branding policies of an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationBrandingPoliciesPriorities,"['organizations', 'configure', 'brandingPolicies', 'priorities']",Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationSaml,"['organizations', 'configure', 'saml']",Returns the SAML SSO enabled settings for an organization.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationSamlIdps,"['organizations', 'configure', 'saml', 'idps']",List the SAML IdPs in your organization.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationSamlRoles,"['organizations', 'configure', 'samlRoles']",List the SAML roles for this organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationSnmp,"['organizations', 'configure', 'snmp']",Return the SNMP settings for an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationApplianceSecurityIntrusion,"['appliance', 'configure', 'security', 'intrusion']",Returns all supported intrusion settings for an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationApplianceVpnThirdPartyVPNPeers,"['appliance', 'configure', 'vpn', 'thirdPartyVPNPeers']",Return the third party VPN peers for an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationApplianceVpnVpnFirewallRules,"['appliance', 'configure', 'vpn', 'vpnFirewallRules']",Return the firewall rules for an organization's site-to-site VPN,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationInsightMonitoredMediaServers,"['insight', 'configure', 'monitoredMediaServers']",List the monitored media servers for this organization. Only valid for organizations with Meraki Insight.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
,getOrganizationLoginSecurity,"['organizations', 'configure', 'loginSecurity']",Returns the login security settings for an organization.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getOrganizationConfigTemplateSwitchProfiles,"['switch', 'configure', 'configTemplates', 'profiles']",List the switch profiles for your switch template configuration,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'configTemplateId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getOrganizationConfigTemplateSwitchProfilePorts,"['switch', 'configure', 'configTemplates', 'profiles', 'ports']",Return all the ports of a switch profile,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'configTemplateId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'profileId', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceManagementInterface,"['devices', 'configure', 'managementInterface']",Return the management interface settings for a device,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceCameraSense,"['camera', 'configure', 'sense']",Returns sense settings for a given camera,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceCameraQualityAndRetention,"['camera', 'configure', 'qualityAndRetention']",Returns quality and retention settings for the given camera,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceCameraVideoSettings,"['camera', 'configure', 'video', 'settings']",Returns video settings for the given camera,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceCellularGatewayLan,"['cellularGateway', 'configure', 'lan']",Show the LAN Settings of a MG,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceCellularGatewayPortForwardingRules,"['cellularGateway', 'configure', 'portForwardingRules']",Returns the port forwarding rules for a single MG.,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceSwitchPorts,"['switch', 'configure', 'ports']",List the switch ports for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchRoutingInterfaces,"['switch', 'configure', 'routing', 'interfaces']",List layer 3 interfaces for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchRoutingInterfaceDhcp,"['switch', 'configure', 'routing', 'interfaces', 'dhcp']",Return a layer 3 interface DHCP configuration for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'interfaceId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchRoutingStaticRoutes,"['switch', 'configure', 'routing', 'staticRoutes']",List layer 3 static routes for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceSwitchWarmSpare,"['switch', 'configure', 'warmSpare']",Return warm spare configuration for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
script,getDeviceWirelessBluetoothSettings,"['wireless', 'configure', 'bluetooth', 'settings']",Return the bluetooth settings for a wireless device,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getDeviceWirelessRadioSettings,"['wireless', 'configure', 'radio', 'settings']",Return the radio settings of a device,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkAlertsSettings,"['networks', 'configure', 'alerts', 'settings']",Return the alert configuration for this network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkFirmwareUpgrades,"['networks', 'configure', 'firmwareUpgrades']",Get current maintenance window for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkFloorPlans,"['networks', 'configure', 'floorPlans']",List the floor plans that belong to your network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,wireless",getNetworkGroupPolicies,"['networks', 'configure', 'groupPolicies']",List the group policies in a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,wireless",getNetworkMerakiAuthUsers,"['networks', 'configure', 'merakiAuthUsers']","List the users configured under Meraki Authentication for a network (splash guest or RADIUS users for a wireless network, or client VPN users for a wired network)","[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
camera,getNetworkMqttBrokers,"['networks', 'configure', 'mqttBrokers']",List the MQTT brokers for this network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
appliance,getNetworkNetflow,"['networks', 'configure', 'netflow']",Return the NetFlow traffic reporting settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,switch,wireless",getNetworkSettings,"['networks', 'configure', 'settings']",Return the settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,switch,wireless",getNetworkSnmp,"['networks', 'configure', 'snmp']",Return the SNMP settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,switch,wireless",getNetworkSyslogServers,"['networks', 'configure', 'syslogServers']",List the syslog servers for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
"appliance,switch,wireless",getNetworkTrafficAnalysis,"['networks', 'configure', 'trafficAnalysis']",Return the traffic analysis settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkWebhooksHttpServers,"['networks', 'configure', 'webhooks', 'httpServers']",List the HTTP servers for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceConnectivityMonitoringDestinations,"['appliance', 'configure', 'connectivityMonitoringDestinations']",Return the connectivity testing destinations for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceContentFiltering,"['appliance', 'configure', 'contentFiltering']",Return the content filtering settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallCellularFirewallRules,"['appliance', 'configure', 'firewall', 'cellularFirewallRules']",Return the cellular firewall rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallFirewalledServices,"['appliance', 'configure', 'firewall', 'firewalledServices']",List the appliance services and their accessibility rules,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallInboundFirewallRules,"['appliance', 'configure', 'firewall', 'inboundFirewallRules']",Return the inbound firewall rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallL3FirewallRules,"['appliance', 'configure', 'firewall', 'l3FirewallRules']",Return the L3 firewall rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallL7FirewallRules,"['appliance', 'configure', 'firewall', 'l7FirewallRules']",List the MX L7 firewall rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallOneToManyNatRules,"['appliance', 'configure', 'firewall', 'oneToManyNatRules']",Return the 1:Many NAT mapping rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallOneToOneNatRules,"['appliance', 'configure', 'firewall', 'oneToOneNatRules']",Return the 1:1 NAT mapping rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceFirewallPortForwardingRules,"['appliance', 'configure', 'firewall', 'portForwardingRules']",Return the port forwarding rules for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getNetworkAppliancePorts,"['appliance', 'configure', 'ports']",List per-port VLAN settings for all ports of a MX.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceSecurityIntrusion,"['appliance', 'configure', 'security', 'intrusion']",Returns all supported intrusion settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceSecurityMalware,"['appliance', 'configure', 'security', 'malware']",Returns all supported malware settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getNetworkApplianceSingleLan,"['appliance', 'configure', 'singleLan']",Return single LAN configuration,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceStaticRoutes,"['appliance', 'configure', 'staticRoutes']",List the static routes for an MX or teleworker network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkApplianceTrafficShaping,"['appliance', 'configure', 'trafficShaping']",Display the traffic shaping settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-bound,getNetworkApplianceTrafficShapingCustomPerformanceClasses,"['appliance', 'configure', 'trafficShaping', 'customPerformanceClasses']",List all custom performance classes for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-bound,getNetworkApplianceTrafficShapingRules,"['appliance', 'configure', 'trafficShaping', 'rules']",Display the traffic shaping settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceTrafficShapingUplinkBandwidth,"['appliance', 'configure', 'trafficShaping', 'uplinkBandwidth']",Returns the uplink bandwidth settings for your MX network.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceTrafficShapingUplinkSelection,"['appliance', 'configure', 'trafficShaping', 'uplinkSelection']",Show uplink selection settings for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getNetworkApplianceVlans,"['appliance', 'configure', 'vlans']",List the VLANs for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkApplianceVlansSettings,"['appliance', 'configure', 'vlans', 'settings']",Returns the enabled status of VLANs for the network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkApplianceVpnBgp,"['appliance', 'configure', 'vpn', 'bgp']",Return a Hub BGP Configuration,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkApplianceVpnSiteToSiteVpn,"['appliance', 'configure', 'vpn', 'siteToSiteVpn']",Return the site-to-site VPN settings of a network. Only valid for MX networks.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkApplianceWarmSpare,"['appliance', 'configure', 'warmSpare']",Return MX warm spare settings,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkCameraQualityRetentionProfiles,"['camera', 'configure', 'qualityRetentionProfiles']",List the quality retention profiles for this network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkCellularGatewayConnectivityMonitoringDestinations,"['cellularGateway', 'configure', 'connectivityMonitoringDestinations']",Return the connectivity testing destinations for an MG network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkCellularGatewayDhcp,"['cellularGateway', 'configure', 'dhcp']",List common DHCP settings of MGs,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkCellularGatewaySubnetPool,"['cellularGateway', 'configure', 'subnetPool']",Return the subnet pool and mask configured for MGs in the network.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkCellularGatewayUplink,"['cellularGateway', 'configure', 'uplink']",Returns the uplink settings for your MG network.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchAccessControlLists,"['switch', 'configure', 'accessControlLists']",Return the access control lists for a MS network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkSwitchAccessPolicies,"['switch', 'configure', 'accessPolicies']",List the access policies for a switch network. Only returns access policies with 'my RADIUS server' as authentication method,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkSwitchDhcpServerPolicy,"['switch', 'configure', 'dhcpServerPolicy']",Return the DHCP server policy,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchDscpToCosMappings,"['switch', 'configure', 'dscpToCosMappings']",Return the DSCP to CoS mappings,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkSwitchLinkAggregations,"['switch', 'configure', 'linkAggregations']",List link aggregation groups,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchMtu,"['switch', 'configure', 'mtu']",Return the MTU configuration,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchPortSchedules,"['switch', 'configure', 'portSchedules']",List switch port schedules,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchQosRules,"['switch', 'configure', 'qosRules']",List quality of service rules,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchQosRulesOrder,"['switch', 'configure', 'qosRules', 'order']",Return the quality of service rule IDs by order in which they will be processed by the switch,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchRoutingMulticast,"['switch', 'configure', 'routing', 'multicast']",Return multicast settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkSwitchRoutingMulticastRendezvousPoints,"['switch', 'configure', 'routing', 'multicast', 'rendezvousPoints']",List multicast rendezvous points,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchRoutingOspf,"['switch', 'configure', 'routing', 'ospf']",Return layer 3 OSPF routing configuration,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchSettings,"['switch', 'configure', 'settings']",Returns the switch network settings,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchStormControl,"['switch', 'configure', 'stormControl']",Return the storm control configuration for a switch network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkSwitchStp,"['switch', 'configure', 'stp']",Returns STP settings,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkSwitchStacks,"['switch', 'configure', 'switchStacks']",List the switch stacks in a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchStackRoutingInterfaces,"['switch', 'configure', 'switchStacks', 'routing', 'interfaces']",List layer 3 interfaces for a switch stack,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'switchStackId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchStackRoutingInterfaceDhcp,"['switch', 'configure', 'switchStacks', 'routing', 'interfaces', 'dhcp']",Return a layer 3 interface DHCP configuration for a switch stack,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'switchStackId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'interfaceId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchStackRoutingStaticRoutes,"['switch', 'configure', 'switchStacks', 'routing', 'staticRoutes']",List layer 3 static routes for a switch stack,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'switchStackId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkWirelessAlternateManagementInterface,"['wireless', 'configure', 'alternateManagementInterface']",Return alternate management interface and devices with IP assigned,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
non-template,getNetworkWirelessBluetoothSettings,"['wireless', 'configure', 'bluetooth', 'settings']","Return the Bluetooth settings for a network. <a href=""https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)"">Bluetooth settings</a> must be enabled on the network.","[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
script,getNetworkWirelessRfProfiles,"['wireless', 'configure', 'rfProfiles']",List the non-basic RF profiles for this network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'boolean', 'name': 'includeTemplateProfiles', 'in': 'query', 'description': '    If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n    should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n'}]"
,getNetworkWirelessSettings,"['wireless', 'configure', 'settings']",Return the wireless settings for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
,getNetworkWirelessSsids,"['wireless', 'configure', 'ssids']",List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
ssids,getNetworkWirelessSsidFirewallL3FirewallRules,"['wireless', 'configure', 'ssids', 'firewall', 'l3FirewallRules']",Return the L3 firewall rules for an SSID on an MR network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
ssids,getNetworkWirelessSsidFirewallL7FirewallRules,"['wireless', 'configure', 'ssids', 'firewall', 'l7FirewallRules']",Return the L7 firewall rules for an SSID on an MR network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
ssids,getNetworkWirelessSsidIdentityPsks,"['wireless', 'configure', 'ssids', 'identityPsks']",List all Identity PSKs in a wireless network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
ssids,getNetworkWirelessSsidSplashSettings,"['wireless', 'configure', 'ssids', 'splash', 'settings']",Display the splash page settings for the given SSID,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
ssids,getNetworkWirelessSsidTrafficShapingRules,"['wireless', 'configure', 'ssids', 'trafficShaping', 'rules']",Display the traffic shaping settings for a SSID on an MR network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganization,"['organizations', 'configure']",Return an organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizations,"['organizations', 'configure']",List the organizations that the user has privileges on,
skipped,getOrganizationActionBatches,"['organizations', 'configure', 'actionBatches']",Return the list of action batches in the organization,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationActionBatch,"['organizations', 'configure', 'actionBatches']",Return an action batch,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'actionBatchId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationConfigTemplate,"['organizations', 'configure', 'configTemplates']",Return a single configuration template,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'configTemplateId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationConfigTemplateSwitchProfilePort,"['switch', 'configure', 'configTemplates', 'profiles', 'ports']",Return a switch profile port,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'configTemplateId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'profileId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'portId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationBrandingPolicy,"['organizations', 'configure', 'brandingPolicies']",Return a branding policy,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'brandingPolicyId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationLicense,"['organizations', 'configure', 'licenses']",Display a license,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'licenseId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationInsightMonitoredMediaServer,"['insight', 'configure', 'monitoredMediaServers']",Return a monitored media server for this organization. Only valid for organizations with Meraki Insight.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'monitoredMediaServerId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationSamlIdp,"['organizations', 'configure', 'saml', 'idps']",Get a SAML IdP from your organization.,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'idpId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getOrganizationSamlRole,"['organizations', 'configure', 'samlRoles']",Return a SAML role,"[{'name': 'organizationId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'samlRoleId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDevice,"['devices', 'configure']",Return a single device,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchPort,"['switch', 'configure', 'ports']",Return a switch port,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'portId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchRoutingInterface,"['switch', 'configure', 'routing', 'interfaces']",Return a layer 3 interface for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'interfaceId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getDeviceSwitchRoutingStaticRoute,"['switch', 'configure', 'routing', 'staticRoutes']",Return a layer 3 static route for a switch,"[{'name': 'serial', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'staticRouteId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetwork,"['networks', 'configure']",Return a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkApplianceFirewallFirewalledService,"['appliance', 'configure', 'firewall', 'firewalledServices']","Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')","[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'service', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkClientPolicy,"['networks', 'configure', 'clients', 'policy']",Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'clientId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkClientSplashAuthorizationStatus,"['networks', 'configure', 'clients', 'splashAuthorizationStatus']","Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.","[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'clientId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkFloorPlan,"['networks', 'configure', 'floorPlans']",Find a floor plan by ID,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'floorPlanId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkGroupPolicy,"['networks', 'configure', 'groupPolicies']",Display a group policy,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'groupPolicyId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkMerakiAuthUser,"['networks', 'configure', 'merakiAuthUsers']","Return the Meraki Auth splash guest, RADIUS, or client VPN user","[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'merakiAuthUserId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkMqttBroker,"['networks', 'configure', 'mqttBrokers']",Return an MQTT broker,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'mqttBrokerId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkPiiRequests,"['networks', 'configure', 'pii', 'requests']",List the PII requests for this network or organization,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkAppliancePort,"['appliance', 'configure', 'ports']",Return per-port VLAN settings for a single MX port.,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'portId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkApplianceStaticRoute,"['appliance', 'configure', 'staticRoutes']",Return a static route for an MX or teleworker network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'staticRouteId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkApplianceTrafficShapingCustomPerformanceClass,"['appliance', 'configure', 'trafficShaping', 'customPerformanceClasses']",Return a custom performance class for an MX network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'customPerformanceClassId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkApplianceVlan,"['appliance', 'configure', 'vlans']",Return a VLAN,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'vlanId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkCameraQualityRetentionProfile,"['camera', 'configure', 'qualityRetentionProfiles']",Retrieve a single quality retention profile,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'qualityRetentionProfileId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSmTargetGroup,"['sm', 'configure', 'targetGroups']",Return a target group,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'targetGroupId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'boolean', 'name': 'withDetails', 'in': 'query', 'description': 'Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response'}]"
skipped,getNetworkSmTargetGroups,"['sm', 'configure', 'targetGroups']",List the target groups in this network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'type': 'boolean', 'name': 'withDetails', 'in': 'query', 'description': 'Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response'}]"
skipped,getNetworkSwitchAccessPolicy,"['switch', 'configure', 'accessPolicies']",Return a specific access policy for a switch network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'accessPolicyNumber', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchQosRule,"['switch', 'configure', 'qosRules']",Return a quality of service rule,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'qosRuleId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchRoutingMulticastRendezvousPoint,"['switch', 'configure', 'routing', 'multicast', 'rendezvousPoints']",Return a multicast rendezvous point,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'rendezvousPointId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchStackRoutingInterface,"['switch', 'configure', 'switchStacks', 'routing', 'interfaces']",Return a layer 3 interface from a switch stack,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'switchStackId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'interfaceId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkSwitchStackRoutingStaticRoute,"['switch', 'configure', 'switchStacks', 'routing', 'staticRoutes']",Return a layer 3 static route for a switch stack,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'switchStackId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'staticRouteId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkWebhooksHttpServer,"['networks', 'configure', 'webhooks', 'httpServers']",Return an HTTP server for a network,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'id', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkWirelessRfProfile,"['wireless', 'configure', 'rfProfiles']",Return a RF profile,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'rfProfileId', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkWirelessSsid,"['wireless', 'configure', 'ssids']",Return a single SSID,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}]"
skipped,getNetworkWirelessSsidIdentityPsk,"['wireless', 'configure', 'ssids', 'identityPsks']",Return an Identity PSK,"[{'name': 'networkId', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'number', 'in': 'path', 'type': 'string', 'required': True}, {'name': 'identityPskId', 'in': 'path', 'type': 'string', 'required': True}]"